题目网址：https://acm.ecnu.edu.cn/contest/695/problem/B/
	这题要求将数组以某种方式分成若干组，使得每个区间的和的最大值与最小值的差取到最小。
	首先，如果不考虑区间和的问题，仅仅要求把数组所有可能的区间划分列举出来，应该如何处理？
	答案是可以用动态规划的方法。用i来表示数组下标，v[i]表示从数组的第一个元素到第i个元素的所有划分方法(规定数组的第一个元素下标是1)，则有以下递推关系：
	1.当i=1时，单独一个元素无法划分，v[1]=0
	2.当i=2时，由于题目要求至少需要划分成两个区间，所以只有一种划分方法，即v[2]=1
	3.当i>=3时，用j从下标i-1遍历到1，每次将j+1到i合并成一个区间，在此基础上从1到i的划分方法数量就等于从1到j的划分方法数量，用代码表示就是
	for(int i=3;i<=n;i++)
	{
	  for(int j=i-1;j>=1;j--)
		{
			v[i]+=v[j];
		}
  }

从理论上说，得到了数组从头到尾的所有区间划分方法，就可以暴力枚举得到答案，但是这意味着需要把每一种划分情况拿出来计算它的每一个区间的和，并在这些区间和中找到最大值和最小值，相减得到答案，时间复杂度过高（

而我们还需要做的，就是进行一个优化处理，即：最小值为x,最大值为y的情况一定比最小值为x'(x'<=x),最大值为y'(y'>=y)好。通过暴力枚举的方法将每一个v[i]中存储的划分方法中那些最小值和最大值都可以优化的划分方法记录并删除（即在最终的v集合中，不存在两组元素（x'，y'），（x，y），使得x'<=x且y'>=y），最终枚举答案时便会少掉很多情况。
	

